{"version":3,"file":"primeng-breadcrumb.mjs","sources":["../../src/breadcrumb/style/breadcrumbstyle.ts","../../src/breadcrumb/breadcrumb.ts","../../src/breadcrumb/primeng-breadcrumb.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/breadcrumb';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: () => ['p-breadcrumb p-component'],\n    list: 'p-breadcrumb-list',\n    homeItem: 'p-breadcrumb-home-item',\n    separator: 'p-breadcrumb-separator',\n    item: ({ menuitem }) => ['p-breadcrumb-item', { 'p-disabled': menuitem.disabled }],\n    itemLink: 'p-breadcrumb-item-link',\n    itemIcon: 'p-breadcrumb-item-icon',\n    itemLabel: 'p-breadcrumb-item-label'\n};\n\n@Injectable()\nexport class BreadCrumbStyle extends BaseStyle {\n    name = 'breadcrumb';\n\n    theme = style;\n\n    classes = classes;\n}\n\n/**\n *\n * Breadcrumb provides contextual information about page hierarchy.\n *\n * [Live Demo](https://www.primeng.org/breadcrumb/)\n *\n * @module breadcrumbstyle\n *\n */\nexport enum BreadcrumbClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-breadcrumb',\n    /**\n     * Class name of the list element\n     */\n    list = 'p-breadcrumb-list',\n    /**\n     * Class name of the home item element\n     */\n    homeItem = 'p-breadcrumb-home-item',\n    /**\n     * Class name of the separator element\n     */\n    separator = 'p-breadcrumb-separator',\n    /**\n     * Class name of the item element\n     */\n    item = 'p-breadcrumb-item',\n    /**\n     * Class name of the item link element\n     */\n    itemLink = 'p-breadcrumb-item-link',\n    /**\n     * Class name of the item icon element\n     */\n    itemIcon = 'p-breadcrumb-item-icon',\n    /**\n     * Class name of the item label element\n     */\n    itemLabel = 'p-breadcrumb-item-label'\n}\n\nexport interface BreadcrumbStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { AfterContentInit, ChangeDetectionStrategy, Component, ContentChild, ContentChildren, EventEmitter, inject, Input, NgModule, Output, QueryList, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { MenuItem, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ChevronRightIcon, HomeIcon } from 'primeng/icons';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { BreadcrumbItemClickEvent } from './breadcrumb.interface';\nimport { BreadCrumbStyle } from './style/breadcrumbstyle';\n\n/**\n * Breadcrumb provides contextual information about page hierarchy.\n * @group Components\n */\n@Component({\n    selector: 'p-breadcrumb',\n    standalone: true,\n    imports: [CommonModule, RouterModule, TooltipModule, ChevronRightIcon, HomeIcon, SharedModule],\n    template: `\n        <nav [class]=\"cn(cx('root'), styleClass)\" [style]=\"style\" [attr.data-pc-name]=\"'breadcrumb'\" [attr.data-pc-section]=\"'root'\">\n            <ol [attr.data-pc-section]=\"'menu'\" [class]=\"cx('list')\">\n                <li [attr.id]=\"home.id\" [class]=\"cn(cx('homeItem'), home.styleClass)\" [ngStyle]=\"home.style\" *ngIf=\"home && home.visible !== false\" pTooltip [tooltipOptions]=\"home.tooltipOptions\" [attr.data-pc-section]=\"'home'\">\n                    @if (itemTemplate || _itemTemplate) {\n                        <ng-template *ngTemplateOutlet=\"itemTemplate || _itemTemplate; context: { $implicit: home }\"></ng-template>\n                    } @else {\n                        <a\n                            [href]=\"home.url ? home.url : null\"\n                            *ngIf=\"!home.routerLink\"\n                            [attr.aria-label]=\"homeAriaLabel\"\n                            [class]=\"cx('itemLink')\"\n                            (click)=\"onClick($event, home)\"\n                            [target]=\"home.target\"\n                            [attr.title]=\"home.title\"\n                            [attr.tabindex]=\"home.disabled ? null : '0'\"\n                        >\n                            <span *ngIf=\"home.icon\" [class]=\"cn(cx('itemIcon'), home.icon)\" [ngStyle]=\"home?.style\"></span>\n                            <svg data-p-icon=\"home\" *ngIf=\"!home.icon\" [class]=\"cx('itemIcon')\" />\n                            <ng-container *ngIf=\"home.label\">\n                                <span *ngIf=\"home.escape !== false; else htmlHomeLabel\" [class]=\"cx('itemLabel')\">{{ home.label }}</span>\n                                <ng-template #htmlHomeLabel><span [class]=\"cx('itemLabel')\" [innerHTML]=\"home.label\"></span></ng-template>\n                            </ng-container>\n                        </a>\n                        <a\n                            *ngIf=\"home.routerLink\"\n                            [routerLink]=\"home.routerLink\"\n                            [attr.aria-label]=\"homeAriaLabel\"\n                            [queryParams]=\"home.queryParams\"\n                            [routerLinkActiveOptions]=\"home.routerLinkActiveOptions || { exact: false }\"\n                            [class]=\"cx('itemLink')\"\n                            (click)=\"onClick($event, home)\"\n                            [target]=\"home.target\"\n                            [attr.title]=\"home.title\"\n                            [attr.tabindex]=\"home.disabled ? null : '0'\"\n                            [fragment]=\"home.fragment\"\n                            [queryParamsHandling]=\"home.queryParamsHandling\"\n                            [preserveFragment]=\"home.preserveFragment\"\n                            [skipLocationChange]=\"home.skipLocationChange\"\n                            [replaceUrl]=\"home.replaceUrl\"\n                            [state]=\"home.state\"\n                        >\n                            <span *ngIf=\"home.icon\" [class]=\"cn(cx('itemIcon'), home.icon)\" [style]=\"home.iconStyle\"></span>\n                            <svg data-p-icon=\"home\" *ngIf=\"!home.icon\" [class]=\"cx('itemIcon')\" />\n                            <ng-container *ngIf=\"home.label\">\n                                <span *ngIf=\"home.escape !== false; else htmlHomeRouteLabel\" [class]=\"cx('itemLabel')\">{{ home.label }}</span>\n                                <ng-template #htmlHomeRouteLabel><span [class]=\"cx('itemLabel')\" [innerHTML]=\"home.label\"></span></ng-template>\n                            </ng-container>\n                        </a>\n                    }\n                </li>\n                <li *ngIf=\"model && home\" [class]=\"cx('separator')\" [attr.data-pc-section]=\"'separator'\">\n                    <svg data-p-icon=\"chevron-right\" *ngIf=\"!separatorTemplate && !_separatorTemplate\" />\n                    <ng-template *ngTemplateOutlet=\"separatorTemplate || _separatorTemplate\"></ng-template>\n                </li>\n                <ng-template ngFor let-menuitem let-end=\"last\" [ngForOf]=\"model\">\n                    <li\n                        *ngIf=\"menuitem.visible !== false\"\n                        [class]=\"cn(cx('item', { menuitem }), menuitem.styleClass)\"\n                        [attr.id]=\"menuitem.id\"\n                        [style]=\"menuitem.style\"\n                        pTooltip\n                        [tooltipOptions]=\"menuitem.tooltipOptions\"\n                        [attr.data-pc-section]=\"'menuitem'\"\n                    >\n                        @if (itemTemplate || _itemTemplate) {\n                            <ng-template *ngTemplateOutlet=\"itemTemplate || _itemTemplate; context: { $implicit: menuitem }\"></ng-template>\n                        } @else {\n                            <a\n                                *ngIf=\"!menuitem?.routerLink\"\n                                [attr.href]=\"menuitem?.url ? menuitem?.url : null\"\n                                [class]=\"cx('itemLink')\"\n                                (click)=\"onClick($event, menuitem)\"\n                                [target]=\"menuitem?.target\"\n                                [attr.title]=\"menuitem?.title\"\n                                [attr.tabindex]=\"menuitem?.disabled ? null : '0'\"\n                            >\n                                <ng-container *ngIf=\"!itemTemplate && !_itemTemplate\">\n                                    <span *ngIf=\"menuitem?.icon\" [class]=\"cn(cx('itemIcon'), menuitem?.icon)\" [style]=\"menuitem?.iconStyle\"></span>\n                                    <ng-container *ngIf=\"menuitem?.label\">\n                                        <span *ngIf=\"menuitem?.escape !== false; else htmlLabel\" [class]=\"cx('itemLabel')\">{{ menuitem?.label }}</span>\n                                        <ng-template #htmlLabel><span [class]=\"cx('itemLabel')\" [innerHTML]=\"menuitem?.label\"></span></ng-template>\n                                    </ng-container>\n                                </ng-container>\n                            </a>\n                            <a\n                                *ngIf=\"menuitem?.routerLink\"\n                                [routerLink]=\"menuitem?.routerLink\"\n                                [queryParams]=\"menuitem?.queryParams\"\n                                [routerLinkActiveOptions]=\"menuitem?.routerLinkActiveOptions || { exact: false }\"\n                                [class]=\"cx('itemLink')\"\n                                (click)=\"onClick($event, menuitem)\"\n                                [target]=\"menuitem?.target\"\n                                [attr.title]=\"menuitem?.title\"\n                                [attr.tabindex]=\"menuitem?.disabled ? null : '0'\"\n                                [fragment]=\"menuitem?.fragment\"\n                                [queryParamsHandling]=\"menuitem?.queryParamsHandling\"\n                                [preserveFragment]=\"menuitem?.preserveFragment\"\n                                [skipLocationChange]=\"menuitem?.skipLocationChange\"\n                                [replaceUrl]=\"menuitem?.replaceUrl\"\n                                [state]=\"menuitem?.state\"\n                            >\n                                <span *ngIf=\"menuitem?.icon\" [class]=\"cn(cx('itemIcon'), menuitem?.icon)\" [style]=\"menuitem?.iconStyle\"></span>\n                                <ng-container *ngIf=\"menuitem?.label\">\n                                    <span *ngIf=\"menuitem?.escape !== false; else htmlRouteLabel\" [class]=\"cx('itemLabel')\">{{ menuitem?.label }}</span>\n                                    <ng-template #htmlRouteLabel><span [class]=\"cx('itemLabel')\" [innerHTML]=\"menuitem?.label\"></span></ng-template>\n                                </ng-container>\n                            </a>\n                        }\n                    </li>\n                    <li *ngIf=\"!end && menuitem.visible !== false\" [class]=\"cx('separator')\" [attr.data-pc-section]=\"'separator'\">\n                        <svg data-p-icon=\"chevron-right\" *ngIf=\"!separatorTemplate && !_separatorTemplate\" />\n                        <ng-template *ngTemplateOutlet=\"separatorTemplate || _separatorTemplate\"></ng-template>\n                    </li>\n                </ng-template>\n            </ol>\n        </nav>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [BreadCrumbStyle]\n})\nexport class Breadcrumb extends BaseComponent implements AfterContentInit {\n    /**\n     * An array of menuitems.\n     * @group Props\n     */\n    @Input() model: MenuItem[] | undefined;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    @Input() style: { [klass: string]: any } | null | undefined;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * MenuItem configuration for the home icon.\n     * @group Props\n     */\n    @Input() home: MenuItem | undefined;\n    /**\n     * Defines a string that labels the home icon for accessibility.\n     * @group Props\n     */\n    @Input() homeAriaLabel: string | undefined;\n    /**\n     * Fired when an item is selected.\n     * @param {BreadcrumbItemClickEvent} event - custom click event.\n     * @group Emits\n     */\n    @Output() onItemClick: EventEmitter<BreadcrumbItemClickEvent> = new EventEmitter<BreadcrumbItemClickEvent>();\n\n    _componentStyle = inject(BreadCrumbStyle);\n\n    constructor(private router: Router) {\n        super();\n    }\n\n    onClick(event: MouseEvent, item: MenuItem) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (!item.url && !item.routerLink) {\n            event.preventDefault();\n        }\n\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n\n        this.onItemClick.emit({\n            originalEvent: event,\n            item: item\n        });\n    }\n\n    /**\n     * Defines template option for item.\n     * @group Templates\n     */\n    @ContentChild('item') itemTemplate: TemplateRef<any> | undefined;\n\n    /**\n     * Defines template option for separator.\n     * @group Templates\n     */\n    @ContentChild('separator') separatorTemplate: TemplateRef<any> | undefined;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    _separatorTemplate: TemplateRef<any> | undefined;\n\n    _itemTemplate: TemplateRef<any> | undefined;\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'separator':\n                    this._separatorTemplate = item.template;\n                    break;\n\n                case 'item':\n                    this._itemTemplate = item.template;\n                    break;\n\n                default:\n                    this._itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n\n@NgModule({\n    imports: [Breadcrumb, SharedModule],\n    exports: [Breadcrumb, SharedModule]\n})\nexport class BreadcrumbModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}