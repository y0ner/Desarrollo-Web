{"version":3,"file":"primeng-progressbar.mjs","sources":["../../src/progressbar/style/progressbarstyle.ts","../../src/progressbar/progressbar.ts","../../src/progressbar/primeng-progressbar.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/progressbar';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-progressbar p-component',\n        {\n            'p-progressbar-determinate': instance.mode == 'determinate',\n            'p-progressbar-indeterminate': instance.mode == 'indeterminate'\n        }\n    ],\n    value: 'p-progressbar-value',\n    label: 'p-progressbar-label'\n};\n\n@Injectable()\nexport class ProgressBarStyle extends BaseStyle {\n    name = 'progressbar';\n\n    theme = style;\n\n    classes = classes;\n}\n\n/**\n *\n * ProgressBar is a process status indicator.\n *\n * [Live Demo](https://www.primeng.org/progressbar)\n *\n * @module progressbarstyle\n *\n */\nexport enum ProgressBarClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-progressbar',\n    /**\n     * Class name of the value element\n     */\n    value = 'p-progressbar-value',\n    /**\n     * Class name of the label element\n     */\n    label = 'p-progressbar-label'\n}\n\nexport interface ProgressBarStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { AfterContentInit, booleanAttribute, ChangeDetectionStrategy, Component, ContentChild, ContentChildren, inject, Input, NgModule, numberAttribute, QueryList, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ProgressBarStyle } from './style/progressbarstyle';\n\n/**\n * ProgressBar is a process status indicator.\n * @group Components\n */\n@Component({\n    selector: 'p-progressBar, p-progressbar, p-progress-bar',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <div *ngIf=\"mode === 'determinate'\" [class]=\"cn(cx('value'), valueStyleClass)\" [style.width]=\"value + '%'\" [style.display]=\"'flex'\" [style.background]=\"color\" [attr.data-pc-section]=\"'value'\">\n            <div [class]=\"cx('label')\">\n                <div *ngIf=\"showValue && !contentTemplate && !_contentTemplate\" [style.display]=\"value != null && value !== 0 ? 'flex' : 'none'\" [attr.data-pc-section]=\"'label'\">{{ value }}{{ unit }}</div>\n                <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate; context: { $implicit: value }\"></ng-container>\n            </div>\n        </div>\n        <div *ngIf=\"mode === 'indeterminate'\" [class]=\"cn(cx('value'), valueStyleClass)\" [style.background]=\"color\" [attr.data-pc-section]=\"'value'\"></div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [ProgressBarStyle],\n    host: {\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-valuemax]': '100',\n        '[attr.data-pc-name]': \"'progressbar'\",\n        '[attr.data-pc-section]': \"'root'\",\n        '[attr.aria-level]': 'value + unit',\n        '[class]': \"cn(cx('root'), styleClass)\"\n    }\n})\nexport class ProgressBar extends BaseComponent implements AfterContentInit {\n    /**\n     * Current value of the progress.\n     * @group Props\n     */\n    @Input({ transform: numberAttribute }) value: number | undefined;\n    /**\n     * Whether to display the progress bar value.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) showValue: boolean = true;\n    /**\n     * Style class of the element.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Style class of the value element.\n     * @group Props\n     */\n    @Input() valueStyleClass: string | undefined;\n    /**\n     * Unit sign appended to the value.\n     * @group Props\n     */\n    @Input() unit: string = '%';\n    /**\n     * Defines the mode of the progress\n     * @group Props\n     */\n    @Input() mode: string = 'determinate';\n    /**\n     * Color for the background of the progress.\n     * @group Props\n     */\n    @Input() color: string | undefined;\n    /**\n     * Template of the content.\n     * @group templates\n     */\n    @ContentChild('content', { descendants: false }) contentTemplate: TemplateRef<any> | undefined;\n\n    _componentStyle = inject(ProgressBarStyle);\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    _contentTemplate: TemplateRef<any> | undefined;\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n                default:\n                    this._contentTemplate = item.template;\n            }\n        });\n    }\n}\n\n@NgModule({\n    imports: [ProgressBar, SharedModule],\n    exports: [ProgressBar, SharedModule]\n})\nexport class ProgressBarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;AAIA,MAAM,OAAO,GAAG;AACZ,IAAA,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK;QACpB,2BAA2B;AAC3B,QAAA;AACI,YAAA,2BAA2B,EAAE,QAAQ,CAAC,IAAI,IAAI,aAAa;AAC3D,YAAA,6BAA6B,EAAE,QAAQ,CAAC,IAAI,IAAI;AACnD;AACJ,KAAA;AACD,IAAA,KAAK,EAAE,qBAAqB;AAC5B,IAAA,KAAK,EAAE;CACV;AAGK,MAAO,gBAAiB,SAAQ,SAAS,CAAA;IAC3C,IAAI,GAAG,aAAa;IAEpB,KAAK,GAAG,KAAK;IAEb,OAAO,GAAG,OAAO;uGALR,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;2GAAhB,gBAAgB,EAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B;;AASD;;;;;;;;AAQG;IACS;AAAZ,CAAA,UAAY,kBAAkB,EAAA;AAC1B;;AAEG;AACH,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,eAAsB;AACtB;;AAEG;AACH,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,qBAA6B;AAC7B;;AAEG;AACH,IAAA,kBAAA,CAAA,OAAA,CAAA,GAAA,qBAA6B;AACjC,CAAC,EAbW,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAAA,CAAA;;AC5B9B;;;AAGG;AA2BG,MAAO,WAAY,SAAQ,aAAa,CAAA;AAC1C;;;AAGG;AACoC,IAAA,KAAK;AAC5C;;;AAGG;IACqC,SAAS,GAAY,IAAI;AACjE;;;;AAIG;AACM,IAAA,UAAU;AACnB;;;AAGG;AACM,IAAA,eAAe;AACxB;;;AAGG;IACM,IAAI,GAAW,GAAG;AAC3B;;;AAGG;IACM,IAAI,GAAW,aAAa;AACrC;;;AAGG;AACM,IAAA,KAAK;AACd;;;AAGG;AAC8C,IAAA,eAAe;AAEhE,IAAA,eAAe,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAEV,IAAA,SAAS;AAEzC,IAAA,gBAAgB;IAEhB,kBAAkB,GAAA;QACd,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,KAAI;AAC7B,YAAA,QAAQ,IAAI,CAAC,OAAO,EAAE;AAClB,gBAAA,KAAK,SAAS;AACV,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ;oBACrC;AACJ,gBAAA;AACI,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ;;AAEjD,QAAA,CAAC,CAAC;IACN;uGA3DS,WAAW,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAAX,WAAW,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAKA,eAAe,CAAA,EAAA,SAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAKf,gBAAgB,CAAA,EAAA,UAAA,EAAA,YAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,GAAA,EAAA,oBAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,OAAA,EAAA,4BAAA,EAAA,EAAA,EAAA,SAAA,EArBzB,CAAC,gBAAgB,CAAC,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAwDZ,aAAa,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAnEpB;;;;;;;;KAQT,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EATS,YAAY,ySAAE,YAAY,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA;;2FAuB3B,WAAW,EAAA,UAAA,EAAA,CAAA;kBA1BvB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,8CAA8C;AACxD,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;AACrC,oBAAA,QAAQ,EAAE;;;;;;;;AAQT,IAAA,CAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,SAAS,EAAE,CAAC,gBAAgB,CAAC;AAC7B,oBAAA,IAAI,EAAE;AACF,wBAAA,sBAAsB,EAAE,GAAG;AAC3B,wBAAA,sBAAsB,EAAE,OAAO;AAC/B,wBAAA,sBAAsB,EAAE,KAAK;AAC7B,wBAAA,qBAAqB,EAAE,eAAe;AACtC,wBAAA,wBAAwB,EAAE,QAAQ;AAClC,wBAAA,mBAAmB,EAAE,cAAc;AACnC,wBAAA,SAAS,EAAE;AACd;AACJ,iBAAA;8BAM0C,KAAK,EAAA,CAAA;sBAA3C,KAAK;uBAAC,EAAE,SAAS,EAAE,eAAe,EAAE;gBAKG,SAAS,EAAA,CAAA;sBAAhD,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAM7B,UAAU,EAAA,CAAA;sBAAlB;gBAKQ,eAAe,EAAA,CAAA;sBAAvB;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,KAAK,EAAA,CAAA;sBAAb;gBAKgD,eAAe,EAAA,CAAA;sBAA/D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,SAAS,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;gBAIf,SAAS,EAAA,CAAA;sBAAxC,eAAe;uBAAC,aAAa;;MAqBrB,iBAAiB,CAAA;uGAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA;AAAjB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAlEjB,WAAW,EA+DG,YAAY,CAAA,EAAA,OAAA,EAAA,CA/D1B,WAAW,EAgEG,YAAY,CAAA,EAAA,CAAA;AAE1B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAAA,OAAA,EAAA,CAHhB,WAAW,EAAE,YAAY,EACZ,YAAY,CAAA,EAAA,CAAA;;2FAE1B,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;AACpC,oBAAA,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY;AACtC,iBAAA;;;ACrGD;;AAEG;;;;"}