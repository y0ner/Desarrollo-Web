import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';
import { SharedModule } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import { style } from '@primeuix/styles/divider';
import { BaseStyle } from 'primeng/base';

/* Position */
const inlineStyles = {
    root: ({ instance }) => ({
        justifyContent: instance.layout === 'horizontal' ? (instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'left' ? 'flex-start' : instance.align === 'right' ? 'flex-end' : null) : null,
        alignItems: instance.layout === 'vertical' ? (instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'top' ? 'flex-start' : instance.align === 'bottom' ? 'flex-end' : null) : null
    })
};
const classes = {
    root: ({ instance }) => [
        'p-divider p-component',
        'p-divider-' + instance.layout,
        'p-divider-' + instance.type,
        { 'p-divider-left': instance.layout === 'horizontal' && (!instance.align || instance.align === 'left') },
        { 'p-divider-center': instance.layout === 'horizontal' && instance.align === 'center' },
        { 'p-divider-right': instance.layout === 'horizontal' && instance.align === 'right' },
        { 'p-divider-top': instance.layout === 'vertical' && instance.align === 'top' },
        { 'p-divider-center': instance.layout === 'vertical' && (!instance.align || instance.align === 'center') },
        { 'p-divider-bottom': instance.layout === 'vertical' && instance.align === 'bottom' }
    ],
    content: 'p-divider-content'
};
class DividerStyle extends BaseStyle {
    name = 'divider';
    theme = style;
    classes = classes;
    inlineStyles = inlineStyles;
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerStyle, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerStyle });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerStyle, decorators: [{
            type: Injectable
        }] });
/**
 *
 * Divider is used to separate contents.
 *
 * [Live Demo](https://primeng.org/divider)
 *
 * @module dividerstyle
 *
 */
var DividerClasses;
(function (DividerClasses) {
    /**
     * Class name of the root element
     */
    DividerClasses["root"] = "p-divider";
    /**
     * Class name of the content element
     */
    DividerClasses["content"] = "p-divider-content";
})(DividerClasses || (DividerClasses = {}));

/**
 * Divider is used to separate contents.
 * @group Components
 */
class Divider extends BaseComponent {
    /**
     * Style class of the component.
     * @deprecated since v20.0.0, use `class` instead.
     * @group Props
     */
    styleClass;
    /**
     * Specifies the orientation.
     * @group Props
     */
    layout = 'horizontal';
    /**
     * Border style type.
     * @group Props
     */
    type = 'solid';
    /**
     * Alignment of the content.
     * @group Props
     */
    align;
    _componentStyle = inject(DividerStyle);
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: Divider, deps: null, target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "20.2.1", type: Divider, isStandalone: true, selector: "p-divider", inputs: { styleClass: "styleClass", layout: "layout", type: "type", align: "align" }, host: { attributes: { "data-pc-name": "divider", "role": "separator" }, properties: { "attr.aria-orientation": "layout", "class": "cn(cx('root'), styleClass)", "style": "sx('root')" } }, providers: [DividerStyle], usesInheritance: true, ngImport: i0, template: `
        <div [class]="cx('content')">
            <ng-content></ng-content>
        </div>
    `, isInline: true, dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "ngmodule", type: SharedModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: Divider, decorators: [{
            type: Component,
            args: [{
                    selector: 'p-divider',
                    standalone: true,
                    imports: [CommonModule, SharedModule],
                    template: `
        <div [class]="cx('content')">
            <ng-content></ng-content>
        </div>
    `,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        '[attr.aria-orientation]': 'layout',
                        'data-pc-name': 'divider',
                        role: 'separator',
                        '[class]': "cn(cx('root'), styleClass)",
                        '[style]': "sx('root')"
                    },
                    providers: [DividerStyle]
                }]
        }], propDecorators: { styleClass: [{
                type: Input
            }], layout: [{
                type: Input
            }], type: [{
                type: Input
            }], align: [{
                type: Input
            }] } });
class DividerModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "20.2.1", ngImport: i0, type: DividerModule, imports: [Divider], exports: [Divider] });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerModule, imports: [Divider] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.1", ngImport: i0, type: DividerModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [Divider],
                    exports: [Divider]
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { Divider, DividerClasses, DividerModule, DividerStyle };
//# sourceMappingURL=primeng-divider.mjs.map
