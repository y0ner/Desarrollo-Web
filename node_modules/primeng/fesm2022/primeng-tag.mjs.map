{"version":3,"file":"primeng-tag.mjs","sources":["../../src/tag/style/tagstyle.ts","../../src/tag/tag.ts","../../src/tag/primeng-tag.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/tag';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-tag p-component',\n        {\n            'p-tag-info': instance.severity === 'info',\n            'p-tag-success': instance.severity === 'success',\n            'p-tag-warn': instance.severity === 'warn',\n            'p-tag-danger': instance.severity === 'danger',\n            'p-tag-secondary': instance.severity === 'secondary',\n            'p-tag-contrast': instance.severity === 'contrast',\n            'p-tag-rounded': instance.rounded\n        }\n    ],\n    icon: 'p-tag-icon',\n    label: 'p-tag-label'\n};\n\n@Injectable()\nexport class TagStyle extends BaseStyle {\n    name = 'tag';\n\n    theme = style;\n\n    classes = classes;\n}\n\n/**\n *\n * Tag component is used to categorize content.\n *\n * [Live Demo](https://www.primeng.org/tag)\n *\n * @module tagstyle\n *\n */\nexport enum TagClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-tag',\n    /**\n     * Class name of the icon element\n     */\n    icon = 'p-tag-icon',\n    /**\n     * Class name of the label element\n     */\n    label = 'p-tag-label'\n}\n\nexport interface TagStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { AfterContentInit, booleanAttribute, ChangeDetectionStrategy, Component, ContentChild, ContentChildren, inject, Input, NgModule, QueryList, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { TagStyle } from './style/tagstyle';\n\n/**\n * Tag component is used to categorize content.\n * @group Components\n */\n@Component({\n    selector: 'p-tag',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <ng-content></ng-content>\n        <ng-container *ngIf=\"!iconTemplate && !_iconTemplate\">\n            <span [class]=\"cx('icon')\" [ngClass]=\"icon\" *ngIf=\"icon\"></span>\n        </ng-container>\n        <span [class]=\"cx('icon')\" *ngIf=\"iconTemplate || _iconTemplate\">\n            <ng-template *ngTemplateOutlet=\"iconTemplate || _iconTemplate\"></ng-template>\n        </span>\n        <span [class]=\"cx('label')\">{{ value }}</span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [TagStyle],\n    host: {\n        '[class]': \"cn(cx('root'), styleClass)\"\n    }\n})\nexport class Tag extends BaseComponent implements AfterContentInit {\n    /**\n     * Style class of the component.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Severity type of the tag.\n     * @group Props\n     */\n    @Input() severity: string | 'success' | 'secondary' | 'info' | 'warn' | 'danger' | 'contrast' | undefined | null;\n    /**\n     * Value to display inside the tag.\n     * @group Props\n     */\n    @Input() value: string | undefined;\n    /**\n     * Icon of the tag to display next to the value.\n     * @group Props\n     */\n    @Input() icon: string | undefined;\n    /**\n     * Whether the corners of the tag are rounded.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) rounded: boolean | undefined;\n\n    @ContentChild('icon', { descendants: false }) iconTemplate: TemplateRef<any>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    _iconTemplate: TemplateRef<any> | undefined;\n\n    _componentStyle = inject(TagStyle);\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'icon':\n                    this._iconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n}\n\n@NgModule({\n    imports: [Tag, SharedModule],\n    exports: [Tag, SharedModule]\n})\nexport class TagModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}