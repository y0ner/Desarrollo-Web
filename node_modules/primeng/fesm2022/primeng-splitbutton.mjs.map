{"version":3,"file":"primeng-splitbutton.mjs","sources":["../../src/splitbutton/style/splitbuttonstyle.ts","../../src/splitbutton/splitbutton.ts","../../src/splitbutton/primeng-splitbutton.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/splitbutton';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-splitbutton p-component',\n        {\n            'p-splitbutton-raised': instance.raised,\n            'p-splitbutton-rounded': instance.rounded,\n            'p-splitbutton-outlined': instance.outlined,\n            'p-splitbutton-text': instance.text,\n            [`p-splitbutton-${instance.size === 'small' ? 'sm' : 'lg'}`]: instance.size\n        }\n    ],\n    pcButton: 'p-splitbutton-button',\n    pcDropdown: 'p-splitbutton-dropdown p-button-icon-only'\n};\n\n@Injectable()\nexport class SplitButtonStyle extends BaseStyle {\n    name = 'splitbutton';\n\n    theme = style;\n\n    classes = classes;\n}\n\n/**\n *\n * SplitButton groups a set of commands in an overlay with a default command.\n *\n * [Live Demo](https://www.primeng.org/splitbutton/)\n *\n * @module splitbuttonstyle\n *\n */\nexport enum SplitButtonClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-splitbutton',\n    /**\n     * Class name of the button element\n     */\n    pcButton = 'p-splitbutton-button',\n    /**\n     * Class name of the dropdown element\n     */\n    pcDropdown = 'p-splitbutton-dropdown'\n}\n\nexport interface SplitButtonStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    booleanAttribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    inject,\n    Input,\n    NgModule,\n    numberAttribute,\n    Output,\n    QueryList,\n    signal,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { MenuItem, PrimeTemplate, SharedModule, TooltipOptions } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ButtonDirective } from 'primeng/button';\nimport { ChevronDownIcon } from 'primeng/icons';\nimport { Ripple } from 'primeng/ripple';\nimport { TieredMenu } from 'primeng/tieredmenu';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ButtonProps, MenuButtonProps } from './splitbutton.interface';\nimport { SplitButtonStyle } from './style/splitbuttonstyle';\n\ntype SplitButtonIconPosition = 'left' | 'right';\n/**\n * SplitButton groups a set of commands in an overlay with a default command.\n * @group Components\n */\n@Component({\n    selector: 'p-splitbutton, p-splitButton, p-split-button',\n    standalone: true,\n    imports: [CommonModule, ButtonDirective, TieredMenu, AutoFocus, ChevronDownIcon, Ripple, TooltipModule, SharedModule],\n    template: `\n        <ng-container *ngIf=\"contentTemplate || _contentTemplate; else defaultButton\">\n            <button\n                [class]=\"cx('pcButton')\"\n                type=\"button\"\n                pButton\n                pRipple\n                [severity]=\"severity\"\n                [text]=\"text\"\n                [outlined]=\"outlined\"\n                [size]=\"size\"\n                [icon]=\"icon\"\n                [iconPos]=\"iconPos\"\n                (click)=\"onDefaultButtonClick($event)\"\n                [disabled]=\"disabled\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"buttonProps?.['ariaLabel'] || label\"\n                [pAutoFocus]=\"autofocus\"\n                [pTooltip]=\"tooltip\"\n                [tooltipOptions]=\"tooltipOptions\"\n            >\n                <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate\"></ng-container>\n            </button>\n        </ng-container>\n        <ng-template #defaultButton>\n            <button\n                #defaultbtn\n                [class]=\"cx('pcButton')\"\n                type=\"button\"\n                pButton\n                pRipple\n                [severity]=\"severity\"\n                [text]=\"text\"\n                [outlined]=\"outlined\"\n                [size]=\"size\"\n                [icon]=\"icon\"\n                [iconPos]=\"iconPos\"\n                [label]=\"label\"\n                (click)=\"onDefaultButtonClick($event)\"\n                [disabled]=\"buttonDisabled\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-label]=\"buttonProps?.['ariaLabel']\"\n                [pAutoFocus]=\"autofocus\"\n                [pTooltip]=\"tooltip\"\n                [tooltipOptions]=\"tooltipOptions\"\n            ></button>\n        </ng-template>\n        <button\n            type=\"button\"\n            pButton\n            pRipple\n            [size]=\"size\"\n            [severity]=\"severity\"\n            [text]=\"text\"\n            [outlined]=\"outlined\"\n            [class]=\"cx('pcDropdown')\"\n            (click)=\"onDropdownButtonClick($event)\"\n            (keydown)=\"onDropdownButtonKeydown($event)\"\n            [disabled]=\"menuButtonDisabled\"\n            [attr.aria-label]=\"menuButtonProps?.['ariaLabel'] || expandAriaLabel\"\n            [attr.aria-haspopup]=\"menuButtonProps?.['ariaHasPopup'] || true\"\n            [attr.aria-expanded]=\"menuButtonProps?.['ariaExpanded'] || isExpanded()\"\n            [attr.aria-controls]=\"menuButtonProps?.['ariaControls'] || ariaId\"\n        >\n            <span *ngIf=\"dropdownIcon\" [class]=\"dropdownIcon\"></span>\n            <ng-container *ngIf=\"!dropdownIcon\">\n                <svg data-p-icon=\"chevron-down\" *ngIf=\"!dropdownIconTemplate && !_dropdownIconTemplate\" />\n                <ng-template *ngTemplateOutlet=\"dropdownIconTemplate || _dropdownIconTemplate\"></ng-template>\n            </ng-container>\n        </button>\n        <p-tieredmenu\n            [id]=\"ariaId\"\n            #menu\n            [popup]=\"true\"\n            [model]=\"model\"\n            [style]=\"menuStyle\"\n            [styleClass]=\"menuStyleClass\"\n            [appendTo]=\"appendTo\"\n            [showTransitionOptions]=\"showTransitionOptions\"\n            [hideTransitionOptions]=\"hideTransitionOptions\"\n            (onHide)=\"onHide()\"\n            (onShow)=\"onShow()\"\n        ></p-tieredmenu>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [SplitButtonStyle],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': \"cn(cx('root'), styleClass)\"\n    }\n})\nexport class SplitButton extends BaseComponent implements AfterContentInit {\n    /**\n     * MenuModel instance to define the overlay items.\n     * @group Props\n     */\n    @Input() model: MenuItem[] | undefined;\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    @Input() severity: 'success' | 'info' | 'warn' | 'danger' | 'help' | 'primary' | 'secondary' | 'contrast' | null | undefined;\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) raised: boolean = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) rounded: boolean = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) text: boolean = false;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) outlined: boolean = false;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    @Input() size: 'small' | 'large' | undefined | null = null;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) plain: boolean = false;\n    /**\n     * Name of the icon.\n     * @group Props\n     */\n    @Input() icon: string | undefined;\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    @Input() iconPos: SplitButtonIconPosition = 'left';\n    /**\n     * Text of the button.\n     * @group Props\n     */\n    @Input() label: string | undefined;\n    /**\n     * Tooltip for the main button.\n     * @group Props\n     */\n    @Input() tooltip: string | undefined;\n    /**\n     * Tooltip options for the main button.\n     * @group Props\n     */\n    @Input() tooltipOptions: TooltipOptions | undefined;\n    /**\n     * Class of the element.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Inline style of the overlay menu.\n     * @group Props\n     */\n    @Input() menuStyle: { [klass: string]: any } | null | undefined;\n    /**\n     * Style class of the overlay menu.\n     * @group Props\n     */\n    @Input() menuStyleClass: string | undefined;\n    /**\n     * Name of the dropdown icon.\n     * @group Props\n     */\n    @Input() dropdownIcon: string | undefined;\n    /**\n     *  Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    @Input() appendTo: HTMLElement | ElementRef | TemplateRef<any> | string | null | undefined | any = 'body';\n    /**\n     * Indicates the direction of the element.\n     * @group Props\n     */\n    @Input() dir: string | undefined;\n    /**\n     * Defines a string that labels the expand button for accessibility.\n     * @group Props\n     */\n    @Input() expandAriaLabel: string | undefined;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    @Input() hideTransitionOptions: string = '.1s linear';\n    /**\n     * Button Props\n     */\n    @Input() buttonProps: ButtonProps | undefined;\n    /**\n     * Menu Button Props\n     */\n    @Input() menuButtonProps: MenuButtonProps | undefined;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) autofocus: boolean | undefined;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) set disabled(v: boolean | undefined) {\n        this._disabled = v;\n        this.buttonDisabled = v;\n        this.menuButtonDisabled = v;\n    }\n    public get disabled(): boolean | undefined {\n        return this._disabled;\n    }\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    @Input({ transform: numberAttribute }) tabindex: number | undefined;\n    /**\n     * When present, it specifies that the menu button element should be disabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) menuButtonDisabled: boolean = false;\n    /**\n     * When present, it specifies that the button element should be disabled.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) buttonDisabled: boolean = false;\n    /**\n     * Callback to invoke when default command button is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    @Output() onClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n    /**\n     * Callback to invoke when overlay menu is hidden.\n     * @group Emits\n     */\n    @Output() onMenuHide: EventEmitter<any> = new EventEmitter<any>();\n    /**\n     * Callback to invoke when overlay menu is shown.\n     * @group Emits\n     */\n    @Output() onMenuShow: EventEmitter<any> = new EventEmitter<any>();\n    /**\n     * Callback to invoke when dropdown button is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    @Output() onDropdownClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n    @ViewChild('defaultbtn') buttonViewChild: ElementRef | undefined;\n\n    @ViewChild('menu') menu: TieredMenu | undefined;\n    /**\n     * Template of the content.\n     * @group Templates\n     */\n    @ContentChild('content', { descendants: false }) contentTemplate: TemplateRef<any> | undefined;\n    /**\n     * Template of the dropdownicon.\n     * @group Templates\n     **/\n    @ContentChild('dropdownicon', { descendants: false }) dropdownIconTemplate: TemplateRef<any> | undefined;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    ariaId: string | undefined;\n\n    isExpanded = signal<boolean>(false);\n\n    private _disabled: boolean | undefined;\n\n    _componentStyle = inject(SplitButtonStyle);\n\n    _contentTemplate: TemplateRef<any> | undefined;\n\n    _dropdownIconTemplate: TemplateRef<any> | undefined;\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.ariaId = uuid('pn_id_');\n    }\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n\n                case 'dropdownicon':\n                    this._dropdownIconTemplate = item.template;\n                    break;\n\n                default:\n                    this._contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    onDefaultButtonClick(event: MouseEvent) {\n        this.onClick.emit(event);\n        this.menu.hide();\n    }\n\n    onDropdownButtonClick(event?: MouseEvent) {\n        this.onDropdownClick.emit(event);\n        this.menu?.toggle({ currentTarget: this.el?.nativeElement, relativeAlign: this.appendTo == null });\n    }\n\n    onDropdownButtonKeydown(event: KeyboardEvent) {\n        if (event.code === 'ArrowDown' || event.code === 'ArrowUp') {\n            this.onDropdownButtonClick();\n            event.preventDefault();\n        }\n    }\n\n    onHide() {\n        this.isExpanded.set(false);\n        this.onMenuHide.emit();\n    }\n\n    onShow() {\n        this.isExpanded.set(true);\n        this.onMenuShow.emit();\n    }\n}\n\n@NgModule({\n    imports: [SplitButton, SharedModule],\n    exports: [SplitButton, SharedModule]\n})\nexport class SplitButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAIA,MAAM,OAAO,GAAG;AACZ,IAAA,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK;QACpB,2BAA2B;AAC3B,QAAA;YACI,sBAAsB,EAAE,QAAQ,CAAC,MAAM;YACvC,uBAAuB,EAAE,QAAQ,CAAC,OAAO;YACzC,wBAAwB,EAAE,QAAQ,CAAC,QAAQ;YAC3C,oBAAoB,EAAE,QAAQ,CAAC,IAAI;AACnC,YAAA,CAAC,iBAAiB,QAAQ,CAAC,IAAI,KAAK,OAAO,GAAG,IAAI,GAAG,IAAI,CAAA,CAAE,GAAG,QAAQ,CAAC;AAC1E;AACJ,KAAA;AACD,IAAA,QAAQ,EAAE,sBAAsB;AAChC,IAAA,UAAU,EAAE;CACf;AAGK,MAAO,gBAAiB,SAAQ,SAAS,CAAA;IAC3C,IAAI,GAAG,aAAa;IAEpB,KAAK,GAAG,KAAK;IAEb,OAAO,GAAG,OAAO;uGALR,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA;2GAAhB,gBAAgB,EAAA,CAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B;;AASD;;;;;;;;AAQG;IACS;AAAZ,CAAA,UAAY,kBAAkB,EAAA;AAC1B;;AAEG;AACH,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,eAAsB;AACtB;;AAEG;AACH,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,sBAAiC;AACjC;;AAEG;AACH,IAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,wBAAqC;AACzC,CAAC,EAbW,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAAA,CAAA;;ACH9B;;;AAGG;AAgGG,MAAO,WAAY,SAAQ,aAAa,CAAA;AAC1C;;;AAGG;AACM,IAAA,KAAK;AACd;;;AAGG;AACM,IAAA,QAAQ;AACjB;;;AAGG;IACqC,MAAM,GAAY,KAAK;AAC/D;;;AAGG;IACqC,OAAO,GAAY,KAAK;AAChE;;;AAGG;IACqC,IAAI,GAAY,KAAK;AAC7D;;;AAGG;IACqC,QAAQ,GAAY,KAAK;AACjE;;;AAGG;IACM,IAAI,GAAyC,IAAI;AAC1D;;;AAGG;IACqC,KAAK,GAAY,KAAK;AAC9D;;;AAGG;AACM,IAAA,IAAI;AACb;;;AAGG;IACM,OAAO,GAA4B,MAAM;AAClD;;;AAGG;AACM,IAAA,KAAK;AACd;;;AAGG;AACM,IAAA,OAAO;AAChB;;;AAGG;AACM,IAAA,cAAc;AACvB;;;;AAIG;AACM,IAAA,UAAU;AACnB;;;AAGG;AACM,IAAA,SAAS;AAClB;;;AAGG;AACM,IAAA,cAAc;AACvB;;;AAGG;AACM,IAAA,YAAY;AACrB;;;AAGG;IACM,QAAQ,GAAkF,MAAM;AACzG;;;AAGG;AACM,IAAA,GAAG;AACZ;;;AAGG;AACM,IAAA,eAAe;AACxB;;;AAGG;IACM,qBAAqB,GAAW,iCAAiC;AAC1E;;;AAGG;IACM,qBAAqB,GAAW,YAAY;AACrD;;AAEG;AACM,IAAA,WAAW;AACpB;;AAEG;AACM,IAAA,eAAe;AACxB;;;AAGG;AACqC,IAAA,SAAS;AACjD;;;AAGG;IACH,IAA4C,QAAQ,CAAC,CAAsB,EAAA;AACvE,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC;AAClB,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC;AACvB,QAAA,IAAI,CAAC,kBAAkB,GAAG,CAAC;IAC/B;AACA,IAAA,IAAW,QAAQ,GAAA;QACf,OAAO,IAAI,CAAC,SAAS;IACzB;AACA;;;AAGG;AACoC,IAAA,QAAQ;AAC/C;;;AAGG;IACqC,kBAAkB,GAAY,KAAK;AAC3E;;;AAGG;IACqC,cAAc,GAAY,KAAK;AACvE;;;;AAIG;AACO,IAAA,OAAO,GAA6B,IAAI,YAAY,EAAc;AAC5E;;;AAGG;AACO,IAAA,UAAU,GAAsB,IAAI,YAAY,EAAO;AACjE;;;AAGG;AACO,IAAA,UAAU,GAAsB,IAAI,YAAY,EAAO;AACjE;;;;AAIG;AACO,IAAA,eAAe,GAA6B,IAAI,YAAY,EAAc;AAE3D,IAAA,eAAe;AAErB,IAAA,IAAI;AACvB;;;AAGG;AAC8C,IAAA,eAAe;AAChE;;;AAGI;AACkD,IAAA,oBAAoB;AAE1C,IAAA,SAAS;AAEzC,IAAA,MAAM;AAEN,IAAA,UAAU,GAAG,MAAM,CAAU,KAAK,sDAAC;AAE3B,IAAA,SAAS;AAEjB,IAAA,eAAe,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAE1C,IAAA,gBAAgB;AAEhB,IAAA,qBAAqB;IAErB,QAAQ,GAAA;QACJ,KAAK,CAAC,QAAQ,EAAE;AAChB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChC;IAEA,kBAAkB,GAAA;QACd,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,IAAI,KAAI;AAC7B,YAAA,QAAQ,IAAI,CAAC,OAAO,EAAE;AAClB,gBAAA,KAAK,SAAS;AACV,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ;oBACrC;AAEJ,gBAAA,KAAK,cAAc;AACf,oBAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,QAAQ;oBAC1C;AAEJ,gBAAA;AACI,oBAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ;oBACrC;;AAEZ,QAAA,CAAC,CAAC;IACN;AAEA,IAAA,oBAAoB,CAAC,KAAiB,EAAA;AAClC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;IACpB;AAEA,IAAA,qBAAqB,CAAC,KAAkB,EAAA;AACpC,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE,CAAC;IACtG;AAEA,IAAA,uBAAuB,CAAC,KAAoB,EAAA;AACxC,QAAA,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;YACxD,IAAI,CAAC,qBAAqB,EAAE;YAC5B,KAAK,CAAC,cAAc,EAAE;QAC1B;IACJ;IAEA,MAAM,GAAA;AACF,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;AAC1B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B;IAEA,MAAM,GAAA;AACF,QAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC;AACzB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IAC1B;uGA3PS,WAAW,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA;2FAAX,WAAW,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAeA,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAKhB,gBAAgB,CAAA,EAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAKhB,gBAAgB,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAKhB,gBAAgB,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAUhB,gBAAgB,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,GAAA,EAAA,KAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,WAAA,EAAA,aAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAoFhB,gBAAgB,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAKhB,gBAAgB,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAYhB,eAAe,CAAA,EAAA,kBAAA,EAAA,CAAA,oBAAA,EAAA,oBAAA,EAKf,gBAAgB,CAAA,EAAA,cAAA,EAAA,CAAA,gBAAA,EAAA,gBAAA,EAKhB,gBAAgB,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,4BAAA,EAAA,EAAA,EAAA,SAAA,EA7JzB,CAAC,gBAAgB,CAAC,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,EAmMZ,aAAa,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,YAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,MAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAxRpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFT,IAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EApFS,YAAY,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,EAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,eAAe,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,aAAA,EAAA,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,UAAU,EAAA,QAAA,EAAA,2CAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,IAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,SAAS,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,eAAe,EAAA,QAAA,EAAA,gCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,MAAM,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAE,aAAa,qXAAE,YAAY,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA;;2FA4F3G,WAAW,EAAA,UAAA,EAAA,CAAA;kBA/FvB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,8CAA8C;AACxD,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,MAAM,EAAE,aAAa,EAAE,YAAY,CAAC;AACrH,oBAAA,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFT,IAAA,CAAA;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE,CAAC,gBAAgB,CAAC;oBAC7B,aAAa,EAAE,iBAAiB,CAAC,IAAI;AACrC,oBAAA,IAAI,EAAE;AACF,wBAAA,SAAS,EAAE;AACd;AACJ,iBAAA;8BAMY,KAAK,EAAA,CAAA;sBAAb;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAKuC,MAAM,EAAA,CAAA;sBAA7C,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAKE,OAAO,EAAA,CAAA;sBAA9C,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAKE,IAAI,EAAA,CAAA;sBAA3C,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAKE,QAAQ,EAAA,CAAA;sBAA/C,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAK7B,IAAI,EAAA,CAAA;sBAAZ;gBAKuC,KAAK,EAAA,CAAA;sBAA5C,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAK7B,IAAI,EAAA,CAAA;sBAAZ;gBAKQ,OAAO,EAAA,CAAA;sBAAf;gBAKQ,KAAK,EAAA,CAAA;sBAAb;gBAKQ,OAAO,EAAA,CAAA;sBAAf;gBAKQ,cAAc,EAAA,CAAA;sBAAtB;gBAMQ,UAAU,EAAA,CAAA;sBAAlB;gBAKQ,SAAS,EAAA,CAAA;sBAAjB;gBAKQ,cAAc,EAAA,CAAA;sBAAtB;gBAKQ,YAAY,EAAA,CAAA;sBAApB;gBAKQ,QAAQ,EAAA,CAAA;sBAAhB;gBAKQ,GAAG,EAAA,CAAA;sBAAX;gBAKQ,eAAe,EAAA,CAAA;sBAAvB;gBAKQ,qBAAqB,EAAA,CAAA;sBAA7B;gBAKQ,qBAAqB,EAAA,CAAA;sBAA7B;gBAIQ,WAAW,EAAA,CAAA;sBAAnB;gBAIQ,eAAe,EAAA,CAAA;sBAAvB;gBAKuC,SAAS,EAAA,CAAA;sBAAhD,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAKM,QAAQ,EAAA,CAAA;sBAAnD,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAYC,QAAQ,EAAA,CAAA;sBAA9C,KAAK;uBAAC,EAAE,SAAS,EAAE,eAAe,EAAE;gBAKG,kBAAkB,EAAA,CAAA;sBAAzD,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAKE,cAAc,EAAA,CAAA;sBAArD,KAAK;uBAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAM5B,OAAO,EAAA,CAAA;sBAAhB;gBAKS,UAAU,EAAA,CAAA;sBAAnB;gBAKS,UAAU,EAAA,CAAA;sBAAnB;gBAMS,eAAe,EAAA,CAAA;sBAAxB;gBAEwB,eAAe,EAAA,CAAA;sBAAvC,SAAS;uBAAC,YAAY;gBAEJ,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM;gBAKgC,eAAe,EAAA,CAAA;sBAA/D,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,SAAS,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;gBAKO,oBAAoB,EAAA,CAAA;sBAAzE,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,cAAc,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;gBAEpB,SAAS,EAAA,CAAA;sBAAxC,eAAe;uBAAC,aAAa;;MAqErB,iBAAiB,CAAA;uGAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA;AAAjB,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAlQjB,WAAW,EA+PG,YAAY,CAAA,EAAA,OAAA,EAAA,CA/P1B,WAAW,EAgQG,YAAY,CAAA,EAAA,CAAA;AAE1B,IAAA,OAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAAA,OAAA,EAAA,CAHhB,WAAW,EAAE,YAAY,EACZ,YAAY,CAAA,EAAA,CAAA;;2FAE1B,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;AACpC,oBAAA,OAAO,EAAE,CAAC,WAAW,EAAE,YAAY;AACtC,iBAAA;;;ACtYD;;AAEG;;;;"}