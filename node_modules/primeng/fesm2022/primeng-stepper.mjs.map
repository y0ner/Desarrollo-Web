{"version":3,"file":"primeng-stepper.mjs","sources":["../../src/stepper/style/stepitemstyle.ts","../../src/stepper/style/stepliststyle.ts","../../src/stepper/style/steppanelsstyle.ts","../../src/stepper/style/steppanelstyle.ts","../../src/stepper/style/stepperstyle.ts","../../src/stepper/style/stepstyle.ts","../../src/stepper/stepper.ts","../../src/stepper/primeng-stepper.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-stepitem',\n        {\n            'p-stepitem-active': instance.isActive()\n        }\n    ]\n};\n\n@Injectable()\nexport class StepItemStyle extends BaseStyle {\n    name = 'stepitem';\n\n    classes = classes;\n}\n\n/**\n *\n * Stepper is a component that streamlines a wizard-like workflow, organizing content into coherent steps and visually guiding users through a numbered progression in a multi-step process.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module stepitemstyle\n *\n */\nexport enum StepItemClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-stepitem'\n}\n\nexport interface StepItemStyle extends BaseStyle {}\n","import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: 'p-steplist'\n};\n\n@Injectable()\nexport class StepListStyle extends BaseStyle {\n    name = 'steplist';\n\n    classes = classes;\n}\n\n/**\n *\n * Stepper is a component that streamlines a wizard-like workflow, organizing content into coherent steps and visually guiding users through a numbered progression in a multi-step process.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module stepliststyle\n *\n */\nexport enum StepListClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-stepitem'\n}\n\nexport interface StepListStyle extends BaseStyle {}\n","import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: 'p-steppanels'\n};\n\n@Injectable()\nexport class StepPanelsStyle extends BaseStyle {\n    name = 'steppanel';\n\n    classes = classes;\n}\n\n/**\n *\n * StepPanel is a helper component for Stepper component.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module steppanelsstyle\n *\n */\nexport enum StepPanelsClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-steppanels'\n}\n\nexport interface StepPanelsStyle extends BaseStyle {}\n","import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-steppanel',\n        {\n            'p-steppanel-active': instance.isVertical() && instance.active()\n        }\n    ],\n    content: 'p-steppanel-content'\n};\n\n@Injectable()\nexport class StepPanelStyle extends BaseStyle {\n    name = 'steppanel';\n\n    classes = classes;\n}\n\n/**\n *\n * StepPanel is a helper component for Stepper component.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module steppanelstyle\n *\n */\nexport enum StepPanelClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-steppanel'\n}\n\nexport interface StepPanelStyle extends BaseStyle {}\n","import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/stepper';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = /*css*/ `\n    ${style}\n\n    /* For PrimeNG */\n    .p-steppanel:not(.p-steppanel-active) > .p-steppanel-content,\n    .p-steppanel-content.ng-animating {\n        overflow: hidden;\n    }\n`;\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-stepper p-component',\n        {\n            'p-readonly': instance.linear()\n        }\n    ],\n    separator: 'p-stepper-separator'\n};\n\n@Injectable()\nexport class StepperStyle extends BaseStyle {\n    name = 'stepper';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * Stepper is a component that streamlines a wizard-like workflow, organizing content into coherent steps and visually guiding users through a numbered progression in a multi-step process.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module stepperstyle\n *\n */\nexport enum StepperClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-stepper',\n    /**\n     * Class name of the separator element\n     */\n    separator = 'p-stepper-separator'\n}\n\nexport interface StepperStyle extends BaseStyle {}\n","import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-step',\n        {\n            'p-step-active': instance.active(),\n            'p-disabled': instance.isStepDisabled()\n        }\n    ],\n    header: 'p-step-header',\n    number: 'p-step-number',\n    title: 'p-step-title'\n};\n\n@Injectable()\nexport class StepStyle extends BaseStyle {\n    name = 'step';\n\n    classes = classes;\n}\n\n/**\n *\n * Stepper is a component that streamlines a wizard-like workflow, organizing content into coherent steps and visually guiding users through a numbered progression in a multi-step process.\n *\n * [Live Demo](https://www.primeng.org/stepper/)\n *\n * @module stepstyle\n *\n */\nexport enum StepClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-step',\n    /**\n     * Class name of the header element\n     */\n    header = 'p-step-header',\n    /**\n     * Class name of the number element\n     */\n    number = 'p-step-number',\n    /**\n     * Class name of the title element\n     */\n    title = 'p-step-title'\n}\n\nexport interface StepStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    contentChild,\n    ContentChild,\n    ContentChildren,\n    contentChildren,\n    effect,\n    forwardRef,\n    inject,\n    input,\n    InputSignal,\n    InputSignalWithTransform,\n    model,\n    ModelSignal,\n    NgModule,\n    QueryList,\n    signal,\n    TemplateRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { find, findIndexInList, uuid } from '@primeuix/utils';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { transformToBoolean } from 'primeng/utils';\nimport { StepItemStyle } from './style/stepitemstyle';\nimport { StepListStyle } from './style/stepliststyle';\nimport { StepPanelsStyle } from './style/steppanelsstyle';\nimport { StepPanelStyle } from './style/steppanelstyle';\nimport { StepperStyle } from './style/stepperstyle';\nimport { StepStyle } from './style/stepstyle';\n\n/**\n * Context interface for the StepPanel content template.\n * @property {() => void} activateCallback - Callback function to activate a step.\n * @property {number} value - The value associated with the step.\n * @property {boolean} active - A flag indicating whether the step is active.\n * @group Interface\n */\nexport interface StepContentTemplateContext {\n    activateCallback: () => void;\n    value: number;\n    active: boolean;\n}\n\n/**\n * Context interface for the StepPanel content template.\n * @property {(index: number) => void} activateCallback - Callback function to activate a step.\n * @property {number} value - The value associated with the step.\n * @property {boolean} active - A flag indicating whether the step is active.\n * @group Interface\n */\nexport interface StepPanelContentTemplateContext {\n    activateCallback: (index: number) => void;\n    value: number;\n    active: boolean;\n}\n\n@Component({\n    selector: 'p-step-list',\n    standalone: true,\n    imports: [CommonModule],\n    template: ` <ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"root\")'\n    },\n    providers: [StepListStyle]\n})\nexport class StepList extends BaseComponent {\n    steps = contentChildren(forwardRef(() => Step));\n\n    _componentStyle = inject(StepListStyle);\n}\n\n@Component({\n    selector: 'p-stepper-separator',\n    standalone: true,\n    imports: [CommonModule],\n    template: ` <ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"separator\")'\n    },\n    providers: [StepperStyle]\n})\nexport class StepperSeparator extends BaseComponent {\n    _componentStyle = inject(StepperStyle);\n}\n\n/**\n * StepItem is a helper component for Stepper component used in vertical orientation.\n * @group Components\n */\n@Component({\n    selector: 'p-step-item',\n    standalone: true,\n    imports: [CommonModule],\n    template: ` <ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"root\")',\n        '[attr.data-p-active]': 'isActive()'\n    },\n    providers: [StepItemStyle]\n})\nexport class StepItem extends BaseComponent {\n    pcStepper = inject(forwardRef(() => Stepper));\n    /**\n     * Value of step.\n     * @type {<number | undefined>}\n     * @defaultValue undefined\n     * @group Props\n     */\n    value: ModelSignal<number | undefined> = model<number | undefined>();\n\n    isActive = computed(() => this.pcStepper.value() === this.value());\n\n    step = contentChild(forwardRef(() => Step));\n\n    stepPanel = contentChild(forwardRef(() => StepPanel));\n\n    constructor() {\n        super();\n        effect(() => {\n            this.step().value.set(this.value());\n        });\n\n        effect(() => {\n            this.stepPanel().value.set(this.value());\n        });\n    }\n\n    _componentStyle = inject(StepItemStyle);\n}\n\n/**\n * Step is a helper component for Stepper component.\n * @group Components\n */\n@Component({\n    selector: 'p-step',\n    standalone: true,\n    imports: [CommonModule, StepperSeparator, SharedModule],\n    template: `\n        @if (!content && !_contentTemplate) {\n            <button [attr.id]=\"id()\" [class]=\"cx('header')\" [attr.role]=\"'tab'\" [tabindex]=\"isStepDisabled() ? -1 : undefined\" [attr.aria-controls]=\"ariaControls()\" [disabled]=\"isStepDisabled()\" (click)=\"onStepClick()\" type=\"button\">\n                <span [class]=\"cx('number')\">{{ value() }}</span>\n                <span [class]=\"cx('title')\">\n                    <ng-content></ng-content>\n                </span>\n            </button>\n            @if (isSeparatorVisible()) {\n                <p-stepper-separator />\n            }\n        } @else {\n            <ng-container *ngTemplateOutlet=\"content || _contentTemplate; context: { activateCallback: onStepClick.bind(this), value: value(), active: active() }\"></ng-container>\n            @if (isSeparatorVisible()) {\n                <p-stepper-separator />\n            }\n        }\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"root\")',\n        '[attr.aria-current]': 'active() ? \"step\" : undefined',\n        '[attr.role]': '\"presentation\"',\n        '[attr.data-p-active]': 'active()',\n        '[attr.data-p-disabled]': 'isStepDisabled()',\n        '[attr.data-pc-name]': '\"step\"'\n    },\n    providers: [StepStyle]\n})\nexport class Step extends BaseComponent implements AfterContentInit {\n    pcStepper = inject(forwardRef(() => Stepper));\n    /**\n     * Active value of stepper.\n     * @type {number}\n     * @defaultValue undefined\n     * @group Props\n     */\n    value: ModelSignal<number> = model<number | undefined>();\n    /**\n     * Whether the step is disabled.\n     * @type {boolean}\n     * @defaultValue false\n     * @group Props\n     */\n    disabled: InputSignalWithTransform<any, boolean> = input(false, {\n        transform: (v: any | boolean) => transformToBoolean(v)\n    });\n\n    active = computed(() => this.pcStepper.isStepActive(this.value()));\n\n    isStepDisabled = computed(() => !this.active() && (this.pcStepper.linear() || this.disabled()));\n\n    id = computed(() => `${this.pcStepper.id()}_step_${this.value()}`);\n\n    ariaControls = computed(() => `${this.pcStepper.id()}_steppanel_${this.value()}`);\n\n    isSeparatorVisible = computed(() => {\n        if (this.pcStepper.stepList()) {\n            const steps = this.pcStepper.stepList().steps();\n            const index = steps.indexOf(this);\n            const stepLen = steps.length;\n            return index !== stepLen - 1;\n        } else {\n            return false;\n        }\n    });\n    /**\n     * Content template.\n     * @type {TemplateRef<StepContentTemplateContext>}\n     * @group Templates\n     */\n    @ContentChild('content', { descendants: false }) content: TemplateRef<StepContentTemplateContext>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    _contentTemplate: TemplateRef<any> | undefined;\n\n    _componentStyle = inject(StepStyle);\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    onStepClick() {\n        this.pcStepper.updateValue(this.value());\n    }\n}\n\n/**\n * StepPanel is a helper component for Stepper component.\n * @group Components\n */\n@Component({\n    selector: 'p-step-panel',\n    standalone: true,\n    imports: [CommonModule, StepperSeparator, SharedModule],\n    template: `\n        @if (isSeparatorVisible()) {\n            <p-stepper-separator />\n        }\n        <div\n            [class]=\"cx('content')\"\n            [@content]=\"isVertical() ? (active() ? { value: 'visible', params: { transitionParams: transitionOptions() } } : { value: 'hidden', params: { transitionParams: transitionOptions() } }) : undefined\"\n            (@content.start)=\"onAnimationStart($event)\"\n            (@content.done)=\"onAnimationEnd($event)\"\n        >\n            @if (isVisible()) {\n                <ng-container *ngTemplateOutlet=\"contentTemplate || _contentTemplate; context: { activateCallback: updateValue.bind(this), value: value(), active: active() }\"></ng-container>\n            }\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"root\")',\n        '[attr.role]': '\"tabpanel\"',\n        '[attr.aria-controls]': 'ariaControls()',\n        '[attr.id]': 'id()',\n        '[attr.data-p-active]': 'active()',\n        '[attr.data-pc-name]': '\"steppanel\"'\n    },\n    animations: [\n        trigger('content', [\n            state(\n                'hidden',\n                style({\n                    height: '0'\n                })\n            ),\n            state(\n                'visible',\n                style({\n                    height: '*'\n                })\n            ),\n            transition('visible <=> hidden', [animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')]),\n            transition('void => *', animate(0))\n        ])\n    ],\n    providers: [StepPanelStyle]\n})\nexport class StepPanel extends BaseComponent implements AfterContentInit {\n    pcStepper = inject(forwardRef(() => Stepper));\n\n    transitionOptions = computed(() => this.pcStepper.transitionOptions());\n    /**\n     * Active value of stepper.\n     * @type {number}\n     * @defaultValue undefined\n     * @group Props\n     */\n    value: ModelSignal<number> = model<number | undefined>(undefined);\n\n    active = computed(() => this.pcStepper.value() === this.value());\n\n    visible = signal<boolean>(this.active());\n\n    isVisible = computed(() => this.active() || (this.isVertical() && this.visible()));\n\n    ariaControls = computed(() => `${this.pcStepper.id()}_step_${this.value()}`);\n\n    id = computed(() => `${this.pcStepper.id()}_steppanel_${this.value()}`);\n\n    isVertical = computed(() => this.pcStepper.stepItems().length > 0);\n\n    isSeparatorVisible = computed(() => {\n        if (this.pcStepper.stepItems()) {\n            const stepLen = this.pcStepper.stepItems().length;\n            const stepPanelElements = find(this.pcStepper.el.nativeElement, '[data-pc-name=\"steppanel\"]');\n            const index = findIndexInList(this.el.nativeElement, stepPanelElements);\n\n            return index !== stepLen - 1;\n        }\n    });\n    /**\n     * Content template.\n     * @param {StepPanelContentTemplateContext} context - Context of the template\n     * @see {@link StepPanelContentTemplateContext}\n     * @group Templates\n     */\n    @ContentChild('content') contentTemplate: TemplateRef<StepPanelContentTemplateContext>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<PrimeTemplate> | undefined;\n\n    _contentTemplate: TemplateRef<any> | undefined;\n\n    _componentStyle = inject(StepPanelStyle);\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this._contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    onAnimationStart(event: any) {\n        if (event.toState === 'visible') {\n            this.visible.set(true);\n        }\n    }\n\n    onAnimationEnd(event: any) {\n        if (event.toState === 'hidden') {\n            this.visible.set(false);\n        }\n    }\n\n    updateValue(value: number) {\n        this.pcStepper.updateValue(value);\n    }\n}\n\n@Component({\n    selector: 'p-step-panels',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: ` <ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[class]': 'cx(\"root\")'\n    },\n    providers: [StepPanelsStyle]\n})\nexport class StepPanels extends BaseComponent {\n    _componentStyle = inject(StepPanelsStyle);\n}\n\n/**\n * Stepper is a component that streamlines a wizard-like workflow, organizing content into coherent steps and visually guiding users through a numbered progression in a multistep process.\n * @group Components\n */\n@Component({\n    selector: 'p-stepper',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: ` <ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [StepperStyle],\n    host: {\n        '[class]': 'cx(\"root\")',\n        '[attr.role]': '\"tablist\"',\n        '[attr.id]': 'id()'\n    }\n})\nexport class Stepper extends BaseComponent {\n    /**\n     * A model that can hold a numeric value or be undefined.\n     * @defaultValue undefined\n     * @type {ModelSignal<number | undefined>}\n     * @group Props\n     */\n    value: ModelSignal<number | undefined> = model<number | undefined>(undefined);\n    /**\n     * A boolean variable that captures user input.\n     * @defaultValue false\n     * @type {InputSignalWithTransform<any, boolean >}\n     * @group Props\n     */\n    linear: InputSignalWithTransform<any, boolean> = input(false, {\n        transform: (v: any | boolean) => transformToBoolean(v)\n    });\n    /**\n     * Transition options of the animation.\n     * @defaultValue 400ms cubic-bezier(0.86, 0, 0.07, 1)\n     * @type {InputSignal<string >}\n     * @group Props\n     */\n    transitionOptions: InputSignal<string> = input<string>('400ms cubic-bezier(0.86, 0, 0.07, 1)');\n\n    _componentStyle = inject(StepperStyle);\n\n    id = signal<string>(uuid('pn_id_'));\n\n    stepItems = contentChildren(StepItem);\n\n    steps = contentChildren(Step);\n\n    stepList = contentChild(StepList);\n\n    updateValue(value: number) {\n        this.value.set(value);\n    }\n\n    isStepActive(value: number) {\n        return this.value() === value;\n    }\n}\n\n@NgModule({\n    imports: [Stepper, StepList, StepPanels, StepPanel, StepItem, Step, StepperSeparator, SharedModule],\n    exports: [Stepper, StepList, StepPanels, StepPanel, StepItem, Step, StepperSeparator, SharedModule]\n})\nexport class StepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["classes","style"],"mappings":"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"}