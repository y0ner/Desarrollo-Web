{"version":3,"file":"primeng-divider.mjs","sources":["../../src/divider/style/dividerstyle.ts","../../src/divider/divider.ts","../../src/divider/primeng-divider.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { style } from '@primeuix/styles/divider';\nimport { BaseStyle } from 'primeng/base';\n\n/* Position */\nconst inlineStyles = {\n    root: ({ instance }) => ({\n        justifyContent: instance.layout === 'horizontal' ? (instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'left' ? 'flex-start' : instance.align === 'right' ? 'flex-end' : null) : null,\n        alignItems: instance.layout === 'vertical' ? (instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'top' ? 'flex-start' : instance.align === 'bottom' ? 'flex-end' : null) : null\n    })\n};\n\nconst classes = {\n    root: ({ instance }) => [\n        'p-divider p-component',\n        'p-divider-' + instance.layout,\n        'p-divider-' + instance.type,\n        { 'p-divider-left': instance.layout === 'horizontal' && (!instance.align || instance.align === 'left') },\n        { 'p-divider-center': instance.layout === 'horizontal' && instance.align === 'center' },\n        { 'p-divider-right': instance.layout === 'horizontal' && instance.align === 'right' },\n        { 'p-divider-top': instance.layout === 'vertical' && instance.align === 'top' },\n        { 'p-divider-center': instance.layout === 'vertical' && (!instance.align || instance.align === 'center') },\n        { 'p-divider-bottom': instance.layout === 'vertical' && instance.align === 'bottom' }\n    ],\n    content: 'p-divider-content'\n};\n\n@Injectable()\nexport class DividerStyle extends BaseStyle {\n    name = 'divider';\n\n    theme = style;\n\n    classes = classes;\n\n    inlineStyles = inlineStyles;\n}\n\n/**\n *\n * Divider is used to separate contents.\n *\n * [Live Demo](https://primeng.org/divider)\n *\n * @module dividerstyle\n *\n */\nexport enum DividerClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-divider',\n    /**\n     * Class name of the content element\n     */\n    content = 'p-divider-content'\n}\n\nexport interface DividerStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, inject, Input, NgModule, ViewEncapsulation } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { DividerStyle } from './style/dividerstyle';\n\n/**\n * Divider is used to separate contents.\n * @group Components\n */\n@Component({\n    selector: 'p-divider',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <div [class]=\"cx('content')\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '[attr.aria-orientation]': 'layout',\n        'data-pc-name': 'divider',\n        role: 'separator',\n        '[class]': \"cn(cx('root'), styleClass)\",\n        '[style]': \"sx('root')\"\n    },\n    providers: [DividerStyle]\n})\nexport class Divider extends BaseComponent {\n    /**\n     * Style class of the component.\n     * @deprecated since v20.0.0, use `class` instead.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Specifies the orientation.\n     * @group Props\n     */\n    @Input() layout: 'horizontal' | 'vertical' | undefined = 'horizontal';\n    /**\n     * Border style type.\n     * @group Props\n     */\n    @Input() type: 'solid' | 'dashed' | 'dotted' | undefined = 'solid';\n    /**\n     * Alignment of the content.\n     * @group Props\n     */\n    @Input() align: 'left' | 'center' | 'right' | 'top' | 'bottom' | undefined;\n\n    _componentStyle = inject(DividerStyle);\n}\n\n@NgModule({\n    imports: [Divider],\n    exports: [Divider]\n})\nexport class DividerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}